#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DouLiForum
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DouLiForum_Database")]
	public partial class DouliForumDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertadmin_Table(admin_Table instance);
    partial void Updateadmin_Table(admin_Table instance);
    partial void Deleteadmin_Table(admin_Table instance);
    partial void Insertuser_Table(user_Table instance);
    partial void Updateuser_Table(user_Table instance);
    partial void Deleteuser_Table(user_Table instance);
    partial void Insertattent_Table(attent_Table instance);
    partial void Updateattent_Table(attent_Table instance);
    partial void Deleteattent_Table(attent_Table instance);
    partial void Insertcomment_Table(comment_Table instance);
    partial void Updatecomment_Table(comment_Table instance);
    partial void Deletecomment_Table(comment_Table instance);
    partial void Insertpost_Table(post_Table instance);
    partial void Updatepost_Table(post_Table instance);
    partial void Deletepost_Table(post_Table instance);
    #endregion
		
		public DouliForumDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DouLiForum_DatabaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DouliForumDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DouliForumDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DouliForumDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DouliForumDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<admin_Table> admin_Table
		{
			get
			{
				return this.GetTable<admin_Table>();
			}
		}
		
		public System.Data.Linq.Table<user_Table> user_Table
		{
			get
			{
				return this.GetTable<user_Table>();
			}
		}
		
		public System.Data.Linq.Table<attent_Table> attent_Table
		{
			get
			{
				return this.GetTable<attent_Table>();
			}
		}
		
		public System.Data.Linq.Table<comment_Table> comment_Table
		{
			get
			{
				return this.GetTable<comment_Table>();
			}
		}
		
		public System.Data.Linq.Table<post_Table> post_Table
		{
			get
			{
				return this.GetTable<post_Table>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.admin_Table")]
	public partial class admin_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _admin_ID;
		
		private string _admin_nickname;
		
		private string _admin_password;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onadmin_IDChanging(string value);
    partial void Onadmin_IDChanged();
    partial void Onadmin_nicknameChanging(string value);
    partial void Onadmin_nicknameChanged();
    partial void Onadmin_passwordChanging(string value);
    partial void Onadmin_passwordChanged();
    #endregion
		
		public admin_Table()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_ID", DbType="NChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string admin_ID
		{
			get
			{
				return this._admin_ID;
			}
			set
			{
				if ((this._admin_ID != value))
				{
					this.Onadmin_IDChanging(value);
					this.SendPropertyChanging();
					this._admin_ID = value;
					this.SendPropertyChanged("admin_ID");
					this.Onadmin_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_nickname", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string admin_nickname
		{
			get
			{
				return this._admin_nickname;
			}
			set
			{
				if ((this._admin_nickname != value))
				{
					this.Onadmin_nicknameChanging(value);
					this.SendPropertyChanging();
					this._admin_nickname = value;
					this.SendPropertyChanged("admin_nickname");
					this.Onadmin_nicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_password", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string admin_password
		{
			get
			{
				return this._admin_password;
			}
			set
			{
				if ((this._admin_password != value))
				{
					this.Onadmin_passwordChanging(value);
					this.SendPropertyChanging();
					this._admin_password = value;
					this.SendPropertyChanged("admin_password");
					this.Onadmin_passwordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_Table")]
	public partial class user_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _user_ID;
		
		private string _user_nickname;
		
		private string _user_password;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_IDChanging(string value);
    partial void Onuser_IDChanged();
    partial void Onuser_nicknameChanging(string value);
    partial void Onuser_nicknameChanged();
    partial void Onuser_passwordChanging(string value);
    partial void Onuser_passwordChanged();
    #endregion
		
		public user_Table()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_ID", DbType="NChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string user_ID
		{
			get
			{
				return this._user_ID;
			}
			set
			{
				if ((this._user_ID != value))
				{
					this.Onuser_IDChanging(value);
					this.SendPropertyChanging();
					this._user_ID = value;
					this.SendPropertyChanged("user_ID");
					this.Onuser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_nickname", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string user_nickname
		{
			get
			{
				return this._user_nickname;
			}
			set
			{
				if ((this._user_nickname != value))
				{
					this.Onuser_nicknameChanging(value);
					this.SendPropertyChanging();
					this._user_nickname = value;
					this.SendPropertyChanged("user_nickname");
					this.Onuser_nicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_password", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string user_password
		{
			get
			{
				return this._user_password;
			}
			set
			{
				if ((this._user_password != value))
				{
					this.Onuser_passwordChanging(value);
					this.SendPropertyChanging();
					this._user_password = value;
					this.SendPropertyChanged("user_password");
					this.Onuser_passwordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.attent_Table")]
	public partial class attent_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _attention_ID;
		
		private string _userID_attention_CL;
		
		private string _user_attention_to_ID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onattention_IDChanging(string value);
    partial void Onattention_IDChanged();
    partial void OnuserID_attention_CLChanging(string value);
    partial void OnuserID_attention_CLChanged();
    partial void Onuser_attention_to_IDChanging(string value);
    partial void Onuser_attention_to_IDChanged();
    #endregion
		
		public attent_Table()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attention_ID", DbType="NChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string attention_ID
		{
			get
			{
				return this._attention_ID;
			}
			set
			{
				if ((this._attention_ID != value))
				{
					this.Onattention_IDChanging(value);
					this.SendPropertyChanging();
					this._attention_ID = value;
					this.SendPropertyChanged("attention_ID");
					this.Onattention_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID_attention_CL", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string userID_attention_CL
		{
			get
			{
				return this._userID_attention_CL;
			}
			set
			{
				if ((this._userID_attention_CL != value))
				{
					this.OnuserID_attention_CLChanging(value);
					this.SendPropertyChanging();
					this._userID_attention_CL = value;
					this.SendPropertyChanged("userID_attention_CL");
					this.OnuserID_attention_CLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_attention_to_ID", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string user_attention_to_ID
		{
			get
			{
				return this._user_attention_to_ID;
			}
			set
			{
				if ((this._user_attention_to_ID != value))
				{
					this.Onuser_attention_to_IDChanging(value);
					this.SendPropertyChanging();
					this._user_attention_to_ID = value;
					this.SendPropertyChanged("user_attention_to_ID");
					this.Onuser_attention_to_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.comment_Table")]
	public partial class comment_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _comment_ID;
		
		private string _comment_post_ID;
		
		private string _comment_user_ID;
		
		private string _comment_content;
		
		private System.DateTime _comment_time;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncomment_IDChanging(string value);
    partial void Oncomment_IDChanged();
    partial void Oncomment_post_IDChanging(string value);
    partial void Oncomment_post_IDChanged();
    partial void Oncomment_user_IDChanging(string value);
    partial void Oncomment_user_IDChanged();
    partial void Oncomment_contentChanging(string value);
    partial void Oncomment_contentChanged();
    partial void Oncomment_timeChanging(System.DateTime value);
    partial void Oncomment_timeChanged();
    #endregion
		
		public comment_Table()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_ID", DbType="NChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string comment_ID
		{
			get
			{
				return this._comment_ID;
			}
			set
			{
				if ((this._comment_ID != value))
				{
					this.Oncomment_IDChanging(value);
					this.SendPropertyChanging();
					this._comment_ID = value;
					this.SendPropertyChanged("comment_ID");
					this.Oncomment_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_post_ID", DbType="NChar(32) NOT NULL", CanBeNull=false)]
		public string comment_post_ID
		{
			get
			{
				return this._comment_post_ID;
			}
			set
			{
				if ((this._comment_post_ID != value))
				{
					this.Oncomment_post_IDChanging(value);
					this.SendPropertyChanging();
					this._comment_post_ID = value;
					this.SendPropertyChanged("comment_post_ID");
					this.Oncomment_post_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_user_ID", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string comment_user_ID
		{
			get
			{
				return this._comment_user_ID;
			}
			set
			{
				if ((this._comment_user_ID != value))
				{
					this.Oncomment_user_IDChanging(value);
					this.SendPropertyChanging();
					this._comment_user_ID = value;
					this.SendPropertyChanged("comment_user_ID");
					this.Oncomment_user_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_content", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string comment_content
		{
			get
			{
				return this._comment_content;
			}
			set
			{
				if ((this._comment_content != value))
				{
					this.Oncomment_contentChanging(value);
					this.SendPropertyChanging();
					this._comment_content = value;
					this.SendPropertyChanged("comment_content");
					this.Oncomment_contentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_time", DbType="SmallDateTime NOT NULL")]
		public System.DateTime comment_time
		{
			get
			{
				return this._comment_time;
			}
			set
			{
				if ((this._comment_time != value))
				{
					this.Oncomment_timeChanging(value);
					this.SendPropertyChanging();
					this._comment_time = value;
					this.SendPropertyChanged("comment_time");
					this.Oncomment_timeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.post_Table")]
	public partial class post_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _post_ID;
		
		private string _post_user_ID;
		
		private string _post_content;
		
		private System.DateTime _post_time;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpost_IDChanging(string value);
    partial void Onpost_IDChanged();
    partial void Onpost_user_IDChanging(string value);
    partial void Onpost_user_IDChanged();
    partial void Onpost_contentChanging(string value);
    partial void Onpost_contentChanged();
    partial void Onpost_timeChanging(System.DateTime value);
    partial void Onpost_timeChanged();
    #endregion
		
		public post_Table()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_ID", DbType="NChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string post_ID
		{
			get
			{
				return this._post_ID;
			}
			set
			{
				if ((this._post_ID != value))
				{
					this.Onpost_IDChanging(value);
					this.SendPropertyChanging();
					this._post_ID = value;
					this.SendPropertyChanged("post_ID");
					this.Onpost_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_user_ID", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string post_user_ID
		{
			get
			{
				return this._post_user_ID;
			}
			set
			{
				if ((this._post_user_ID != value))
				{
					this.Onpost_user_IDChanging(value);
					this.SendPropertyChanging();
					this._post_user_ID = value;
					this.SendPropertyChanged("post_user_ID");
					this.Onpost_user_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_content", DbType="NChar(100)")]
		public string post_content
		{
			get
			{
				return this._post_content;
			}
			set
			{
				if ((this._post_content != value))
				{
					this.Onpost_contentChanging(value);
					this.SendPropertyChanging();
					this._post_content = value;
					this.SendPropertyChanged("post_content");
					this.Onpost_contentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_time", DbType="SmallDateTime NOT NULL")]
		public System.DateTime post_time
		{
			get
			{
				return this._post_time;
			}
			set
			{
				if ((this._post_time != value))
				{
					this.Onpost_timeChanging(value);
					this.SendPropertyChanging();
					this._post_time = value;
					this.SendPropertyChanged("post_time");
					this.Onpost_timeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
